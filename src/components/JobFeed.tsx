
import { useState } from 'react';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import JobCard from './JobCard';
import { Search, Hash, Users } from 'lucide-react';

const JobFeed = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedFilter, setSelectedFilter] = useState('all');

  const jobs = [
    {
      id: '1',
      title: '–ê—Ö–ª–∞—Ö Frontend –•”©–≥–∂“Ø“Ø–ª—ç–≥—á',
      company: '–ê–∑–∏ –ù–æ–º—Ö–æ–Ω –î–∞–ª–∞–π–Ω –ò—Ö –°—É—Ä–≥—É—É–ª—å (APU)',
      salary: '‚ÇÆ2,500,000 - ‚ÇÆ3,500,000',
      location: '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä',
      type: '–ë“Ø—Ç—ç–Ω —Ü–∞–≥–∏–π–Ω',
      tags: ['React', 'TypeScript', '–ê–ª—Å–∞–∞—Å –∞–∂–∏–ª–ª–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π'],
      interviewAvailable: true,
      applicants: 23,
      posted: '2 —Ü–∞–≥–∏–π–Ω ”©–º–Ω”©',
      urgent: true
    },
    {
      id: '2',
      title: '–î–∏–∂–∏—Ç–∞–ª –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–∏–π–Ω –ú–µ–Ω–µ–∂–µ—Ä',
      company: 'MCSI (–ú–æ–Ω–≥–æ–ª)',
      salary: '‚ÇÆ1,800,000 - ‚ÇÆ2,800,000',
      location: '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä',
      type: '–ë“Ø—Ç—ç–Ω —Ü–∞–≥–∏–π–Ω',
      tags: ['–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', '–ù–∏–π–≥–º–∏–π–Ω —Å“Ø–ª–∂—ç—ç', '–ê–Ω–∞–ª–∏—Ç–∏–∫'],
      interviewAvailable: true,
      applicants: 45,
      posted: '4 —Ü–∞–≥–∏–π–Ω ”©–º–Ω”©'
    },
    {
      id: '3',
      title: '–î—ç–ª–≥“Ø“Ø—Ä–∏–π–Ω –ú–µ–Ω–µ–∂–µ—Ä',
      company: 'GS25 –ú–æ–Ω–≥–æ–ª',
      salary: '‚ÇÆ1,200,000 - ‚ÇÆ1,800,000',
      location: '–û–ª–æ–Ω –±–∞–π—Ä—à–∏–ª',
      type: '–ë“Ø—Ç—ç–Ω —Ü–∞–≥–∏–π–Ω',
      tags: ['–ñ–∏–∂–∏–≥–ª—ç–Ω —Ö—É–¥–∞–ª–¥–∞–∞', '–£–¥–∏—Ä–¥–ª–∞–≥–∞', '“Æ–π–ª—á–ª“Ø“Ø–ª—ç–≥—á–∏–π–Ω “Ø–π–ª—á–∏–ª–≥—ç—ç'],
      interviewAvailable: true,
      applicants: 67,
      posted: '6 —Ü–∞–≥–∏–π–Ω ”©–º–Ω”©'
    },
    {
      id: '4',
      title: '–°–∞–Ω—Ö“Ø“Ø–≥–∏–π–Ω –®–∏–Ω–∂—ç—ç—á',
      company: 'Teso Life',
      salary: '‚ÇÆ2,000,000 - ‚ÇÆ3,000,000',
      location: '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä',
      type: '–ë“Ø—Ç—ç–Ω —Ü–∞–≥–∏–π–Ω',
      tags: ['–°–∞–Ω—Ö“Ø“Ø', 'Excel', '–ê–Ω–∞–ª–∏—Ç–∏–∫'],
      interviewAvailable: false,
      applicants: 89,
      posted: '1 ”©–¥—Ä–∏–π–Ω ”©–º–Ω”©'
    },
    {
      id: '5',
      title: '–ú–æ–±–∞–π–ª –ê–ø–ø –•”©–≥–∂“Ø“Ø–ª—ç–≥—á',
      company: 'Unitel',
      salary: '‚ÇÆ2,200,000 - ‚ÇÆ3,200,000',
      location: '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä',
      type: '–ë“Ø—Ç—ç–Ω —Ü–∞–≥–∏–π–Ω',
      tags: ['–ú–æ–±–∞–π–ª', 'iOS', 'Android', 'React Native'],
      interviewAvailable: true,
      applicants: 34,
      posted: '5 —Ü–∞–≥–∏–π–Ω ”©–º–Ω”©'
    },
    {
      id: '6',
      title: '–°–∞–ª–±–∞—Ä—ã–Ω –ú–µ–Ω–µ–∂–µ—Ä',
      company: '–•–∞–∞–Ω –ë–∞–Ω–∫',
      salary: '‚ÇÆ1,800,000 - ‚ÇÆ2,500,000',
      location: '–î–∞—Ä—Ö–∞–Ω',
      type: '–ë“Ø—Ç—ç–Ω —Ü–∞–≥–∏–π–Ω',
      tags: ['–ë–∞–Ω–∫–Ω—ã “Ø–π–ª—á–∏–ª–≥—ç—ç', '–£–¥–∏—Ä–¥–ª–∞–≥–∞', '“Æ–π–ª—á–ª“Ø“Ø–ª—ç–≥—á–∏–π–Ω —Ö–∞—Ä–∏–ª—Ü–∞–∞'],
      interviewAvailable: true,
      applicants: 52,
      posted: '3 —Ü–∞–≥–∏–π–Ω ”©–º–Ω”©'
    }
  ];

  const filters = [
    { key: 'all', label: '–ë“Ø—Ö –∞–∂–ª—ã–Ω –±–∞–π—Ä', count: jobs.length },
    { key: 'interview', label: '–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞ –±—ç–ª—ç–Ω', count: jobs.filter(j => j.interviewAvailable).length },
    { key: 'urgent', label: '–Ø–∞—Ä–∞–ª—Ç–∞–π', count: jobs.filter(j => j.urgent).length },
    { key: 'remote', label: '–ê–ª—Å–∞–∞—Å –∞–∂–∏–ª–ª–∞—Ö', count: jobs.filter(j => j.tags.includes('–ê–ª—Å–∞–∞—Å –∞–∂–∏–ª–ª–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π')).length }
  ];

  const filteredJobs = jobs.filter(job => {
    const matchesSearch = job.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         job.company.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         job.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    
    const matchesFilter = selectedFilter === 'all' ||
                         (selectedFilter === 'interview' && job.interviewAvailable) ||
                         (selectedFilter === 'urgent' && job.urgent) ||
                         (selectedFilter === 'remote' && job.tags.includes('–ê–ª—Å–∞–∞—Å –∞–∂–∏–ª–ª–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π'));
    
    return matchesSearch && matchesFilter;
  });

  return (
    <div id="job-section" className="min-h-screen bg-[#36393f]">
      {/* Discord-style curved section divider */}
      <div className="relative">
        <svg className="w-full h-24 fill-[#404EED]" viewBox="0 0 1440 120" preserveAspectRatio="none">
          <path d="M0,0 C480,120 960,120 1440,0 L1440,0 L0,0 Z"></path>
        </svg>
      </div>

      <div className="px-6 pb-24">
        <div className="max-w-7xl mx-auto">
          {/* Discord-style section header */}
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-6xl font-black text-white mb-6">
              –ê–ñ–õ–´–ù –ë–ê–ô–† –•–ê–ô–• –•–Ø–õ–ë–ê–† –ê–†–ì–ê
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              –ê–∂–ª—ã–Ω –±–∞–π—Ä “Ø–∑—ç–∂, –∞–∂–∏–ª –æ–ª–≥–æ–≥—á–∏–¥—Ç–æ–π —á–∞—Ç–ª–∞–∂, ”©”©—Ä–∏–π–Ω —Ç”©–≥—Å —Ç–æ—Ö–∏—Ä–ª—ã–≥ –æ–ª–æ–æ—Ä–æ–π. 
              –ê–∂–∏–ª —Ö–∞–π—Ö —è–≤—Ü—ã–≥ –∞–º–∞—Ä—Ö–∞–Ω, –Ω–∞–π–∑—É—É–¥—Ç–∞–π–≥–∞–∞ —É—É–ª–∑–∞–∂ –±–∞–π–≥–∞–∞ –º—ç—Ç –±–æ–ª–≥–æ–æ—Ä–æ–π.
            </p>
          </div>

          {/* Discord-style feature cards */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-16 items-center mb-24">
            <div>
              <h3 className="text-3xl md:text-5xl font-black text-white mb-6">
                –¢–∞ ”©”©—Ä–∏–π–Ω—Ö”©”© –æ—Ä–æ–Ω –∑–∞–π–≥ –±“Ø—Ç—ç—ç–≥—ç—ç—Ä—ç–π
              </h3>
              <p className="text-lg text-gray-300 leading-relaxed">
                –ê–∂–ª—ã–Ω —Å–µ—Ä–≤–µ—Ä“Ø“Ø–¥ –Ω—å —Å—ç–¥–≤–∏–π–Ω –¥–∞–≥—É—É –∑–æ—Ö–∏–æ–Ω –±–∞–π–≥—É—É–ª–∞–≥–¥—Å–∞–Ω —Å—É–≤–≥—É—É–¥–∞–¥ —Ö—É–≤–∞–∞–≥–¥–¥–∞–≥ –±”©–≥”©”©–¥ 
                —Ç–∞ —Ö–∞–º—Ç—Ä–∞–Ω –∞–∂–∏–ª–ª–∞–∂, —Å–∞–Ω–∞–∞ —Å–æ–ª–∏–ª—Ü–æ–∂, –∫–∞—Ä—å–µ—Ä–∏–π–Ω—Ö–∞–∞ —Ç–∞–ª–∞–∞—Ä —è—Ä–∏–ª—Ü–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π.
              </p>
            </div>
            <div className="bg-[#2f3136] rounded-lg p-8 border border-gray-700">
              <div className="space-y-4">
                <div className="flex items-center space-x-3">
                  <Hash className="w-5 h-5 text-gray-400" />
                  <span className="text-gray-300">–µ—Ä”©–Ω—Ö–∏–π-–∞–∂–ª—ã–Ω-–±–∞–π—Ä</span>
                </div>
                <div className="flex items-center space-x-3">
                  <Hash className="w-5 h-5 text-gray-400" />
                  <span className="text-gray-300">—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏-–±–æ–ª–æ–º–∂—É—É–¥</span>
                </div>
                <div className="flex items-center space-x-3">
                  <Hash className="w-5 h-5 text-gray-400" />
                  <span className="text-gray-300">—Å–∞–Ω—Ö“Ø“Ø-–∞–ª–±–∞–Ω-—Ç—É—à–∞–∞–ª</span>
                </div>
                <div className="flex items-center space-x-3">
                  <Users className="w-5 h-5 text-green-400" />
                  <span className="text-gray-300">–Ø—Ä–∏–ª—Ü–ª–∞–≥—ã–Ω ”©—Ä”©”©</span>
                </div>
              </div>
            </div>
          </div>

          {/* Search Section */}
          <div className="bg-[#2f3136] rounded-lg p-8 mb-8 border border-gray-700">
            <div className="max-w-2xl mx-auto">
              <div className="relative mb-6">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <Input
                  placeholder="–ú”©—Ä”©”©–¥–ª–∏–π–Ω –∞–∂–ª–∞–∞ —Ö–∞–π–≥–∞–∞—Ä–∞–π..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="pl-12 pr-4 py-6 text-lg bg-[#40444b] border-gray-600 text-white placeholder-gray-400 focus:border-[#404EED] rounded-lg"
                />
              </div>

              <div className="flex flex-wrap justify-center gap-2">
                {filters.map((filter) => (
                  <Button
                    key={filter.key}
                    variant={selectedFilter === filter.key ? 'default' : 'outline'}
                    size="sm"
                    onClick={() => setSelectedFilter(filter.key)}
                    className={`rounded-lg ${
                      selectedFilter === filter.key 
                        ? 'bg-[#404EED] text-white hover:bg-[#404EED]/90' 
                        : 'border-gray-600 text-gray-300 hover:bg-gray-700 bg-transparent'
                    }`}
                  >
                    {filter.label}
                    <Badge 
                      variant="secondary" 
                      className="ml-2 text-xs bg-gray-600 text-gray-200"
                    >
                      {filter.count}
                    </Badge>
                  </Button>
                ))}
              </div>
            </div>
          </div>

          {/* Job Results */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredJobs.map((job, index) => (
              <div key={job.id} className="animate-slide-up" style={{ animationDelay: `${index * 0.1}s` }}>
                <JobCard {...job} />
              </div>
            ))}
          </div>

          {filteredJobs.length === 0 && (
            <div className="text-center py-16">
              <div className="text-4xl mb-4">üîç</div>
              <h3 className="text-xl font-semibold text-white mb-2">–ê–∂–ª—ã–Ω –±–∞–π—Ä –æ–ª–¥—Å–æ–Ω–≥“Ø–π</h3>
              <p className="text-gray-400">–•–∞–π–ª—Ç —ç—Å–≤—ç–ª —à“Ø“Ø–ª—Ç“Ø“Ø—Ä—ç—ç ”©”©—Ä—á–∏–ª–∂ “Ø–∑—ç—ç—Ä—ç–π</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default JobFeed;
